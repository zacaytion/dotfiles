function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 *
 * 
 */

var _utilsFirstNode = require('../utils/FirstNode');

var _utilsFirstNode2 = _interopRequireDefault(_utilsFirstNode);

var _utilsGetUndeclaredIdentifiers = require('../utils/getUndeclaredIdentifiers');

var _utilsGetUndeclaredIdentifiers2 = _interopRequireDefault(_utilsGetUndeclaredIdentifiers);

var _utilsGetUndeclaredJSXIdentifiers = require('../utils/getUndeclaredJSXIdentifiers');

var _utilsGetUndeclaredJSXIdentifiers2 = _interopRequireDefault(_utilsGetUndeclaredJSXIdentifiers);

function addMissingRequires(root, options) {
  var first = _utilsFirstNode2['default'].get(root);
  if (!first) {
    return;
  }
  var _first = first; // For flow.

  var moduleMap = options.moduleMap;

  // Add the missing requires.
  (0, _utilsGetUndeclaredIdentifiers2['default'])(root, options).forEach(function (name) {
    var node = moduleMap.getRequire(name, { sourcePath: options.sourcePath });
    _first.insertBefore(node);
  });

  // Add missing JSX requires.
  (0, _utilsGetUndeclaredJSXIdentifiers2['default'])(root, options).forEach(function (name) {
    var node = moduleMap.getRequire(name, {
      sourcePath: options.sourcePath,
      jsxIdentifier: true
    });
    _first.insertBefore(node);
  });
}

module.exports = addMissingRequires;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vcmVxdWlyZXMvYWRkTWlzc2luZ1JlcXVpcmVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs4QkFhc0Isb0JBQW9COzs7OzZDQUNMLG1DQUFtQzs7OztnREFDaEMsc0NBQXNDOzs7O0FBRTlFLFNBQVMsa0JBQWtCLENBQUMsSUFBZ0IsRUFBRSxPQUFzQixFQUFRO0FBQzFFLE1BQU0sS0FBSyxHQUFHLDRCQUFVLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNsQyxNQUFJLENBQUMsS0FBSyxFQUFFO0FBQ1YsV0FBTztHQUNSO0FBQ0QsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDOztNQUVkLFNBQVMsR0FBSSxPQUFPLENBQXBCLFNBQVM7OztBQUdoQixrREFBeUIsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUksRUFBSTtBQUN0RCxRQUFNLElBQUksR0FBRyxTQUFTLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxFQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsVUFBVSxFQUFDLENBQUMsQ0FBQztBQUMxRSxVQUFNLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQzNCLENBQUMsQ0FBQzs7O0FBR0gscURBQTRCLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxJQUFJLEVBQUk7QUFDekQsUUFBTSxJQUFJLEdBQUcsU0FBUyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUU7QUFDdEMsZ0JBQVUsRUFBRSxPQUFPLENBQUMsVUFBVTtBQUM5QixtQkFBYSxFQUFFLElBQUk7S0FDcEIsQ0FBQyxDQUFDO0FBQ0gsVUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUMzQixDQUFDLENBQUM7Q0FDSjs7QUFFRCxNQUFNLENBQUMsT0FBTyxHQUFHLGtCQUFrQixDQUFDIiwiZmlsZSI6ImFkZE1pc3NpbmdSZXF1aXJlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICovXG5cbmltcG9ydCB0eXBlIHtDb2xsZWN0aW9ufSBmcm9tICcuLi90eXBlcy9hc3QnO1xuaW1wb3J0IHR5cGUge1NvdXJjZU9wdGlvbnN9IGZyb20gJy4uL29wdGlvbnMvU291cmNlT3B0aW9ucyc7XG5cbmltcG9ydCBGaXJzdE5vZGUgZnJvbSAnLi4vdXRpbHMvRmlyc3ROb2RlJztcbmltcG9ydCBnZXRVbmRlY2xhcmVkSWRlbnRpZmllcnMgZnJvbSAnLi4vdXRpbHMvZ2V0VW5kZWNsYXJlZElkZW50aWZpZXJzJztcbmltcG9ydCBnZXRVbmRlY2xhcmVkSlNYSWRlbnRpZmllcnMgZnJvbSAnLi4vdXRpbHMvZ2V0VW5kZWNsYXJlZEpTWElkZW50aWZpZXJzJztcblxuZnVuY3Rpb24gYWRkTWlzc2luZ1JlcXVpcmVzKHJvb3Q6IENvbGxlY3Rpb24sIG9wdGlvbnM6IFNvdXJjZU9wdGlvbnMpOiB2b2lkIHtcbiAgY29uc3QgZmlyc3QgPSBGaXJzdE5vZGUuZ2V0KHJvb3QpO1xuICBpZiAoIWZpcnN0KSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IF9maXJzdCA9IGZpcnN0OyAvLyBGb3IgZmxvdy5cblxuICBjb25zdCB7bW9kdWxlTWFwfSA9IG9wdGlvbnM7XG5cbiAgLy8gQWRkIHRoZSBtaXNzaW5nIHJlcXVpcmVzLlxuICBnZXRVbmRlY2xhcmVkSWRlbnRpZmllcnMocm9vdCwgb3B0aW9ucykuZm9yRWFjaChuYW1lID0+IHtcbiAgICBjb25zdCBub2RlID0gbW9kdWxlTWFwLmdldFJlcXVpcmUobmFtZSwge3NvdXJjZVBhdGg6IG9wdGlvbnMuc291cmNlUGF0aH0pO1xuICAgIF9maXJzdC5pbnNlcnRCZWZvcmUobm9kZSk7XG4gIH0pO1xuXG4gIC8vIEFkZCBtaXNzaW5nIEpTWCByZXF1aXJlcy5cbiAgZ2V0VW5kZWNsYXJlZEpTWElkZW50aWZpZXJzKHJvb3QsIG9wdGlvbnMpLmZvckVhY2gobmFtZSA9PiB7XG4gICAgY29uc3Qgbm9kZSA9IG1vZHVsZU1hcC5nZXRSZXF1aXJlKG5hbWUsIHtcbiAgICAgIHNvdXJjZVBhdGg6IG9wdGlvbnMuc291cmNlUGF0aCxcbiAgICAgIGpzeElkZW50aWZpZXI6IHRydWUsXG4gICAgfSk7XG4gICAgX2ZpcnN0Lmluc2VydEJlZm9yZShub2RlKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYWRkTWlzc2luZ1JlcXVpcmVzO1xuIl19